{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"../src/firebase\";\nimport { db } from \"../src/firebase\";\nimport Quiz from \"../src/components/Quiz\";\nimport Header from \"../src/components/Header\";\nimport Buttons from \"../src/components/Buttons\";\n\nvar Main = function Main() {\n  var _useState = useState({\n    loginEmail: \"\",\n    loginPassword: \"\",\n    email: \"\",\n    password: \"\",\n    isUserEmpty: true,\n    quiz: [],\n    count: 0,\n    answer: false,\n    correct: false,\n    answerNumber: 100\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"trueです！\");\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          isUserEmpty: false\n        }));\n      }\n\n      console.log(\"useEffect実行中\");\n    });\n    var list = [];\n    db.collection(\"quiz\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        var new_hash = {\n          text: doc.data().text,\n          choice1: doc.data().choice1,\n          choice2: doc.data().choice2,\n          choice3: doc.data().choice3,\n          choice4: doc.data().choice4,\n          answer: doc.data().answer\n        };\n        list.push(new_hash);\n      });\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        quiz: list\n      }));\n    });\n    return function () {\n      console.log('unmounting');\n    };\n  }, []);\n\n  var logout = function logout() {\n    firebase.auth().signOut().then(function () {}).catch(function (error) {});\n  };\n\n  var _googleLogin = function googleLogin() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n\n    if (state.isUserEmpty) {\n      console.log(\"googleでログインします\");\n      firebase.auth().signInWithPopup(provider).then(function (result) {}).catch(function (error) {});\n    } else {\n      logout();\n    }\n  };\n\n  var _nextQuestion = function nextQuestion() {\n    var count = state.count + 1;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      count: count,\n      answer: false\n    }));\n  };\n\n  var _returnQuestion = function returnQuestion() {\n    var count = state.count - 1;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      count: count\n    }));\n  };\n\n  var _showAnswer = function showAnswer(num, answer) {\n    if (num === answer) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        answerNumber: num,\n        correct: true,\n        answer: true\n      }));\n    } else {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        answerNumber: num,\n        correct: false,\n        answer: true\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1985524870\"\n  }, __jsx(Header, {\n    isUserEmpty: state.isUserEmpty,\n    googleLogin: function googleLogin() {\n      return _googleLogin();\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-1985524870\" + \" \" + \"question mx-auto\"\n  }, __jsx(Quiz, {\n    quiz: state.quiz[state.count],\n    showAnswer: function showAnswer(num, quiz) {\n      return _showAnswer(num, quiz);\n    },\n    answer: state.answer,\n    correct: state.correct,\n    answerNumber: state.answerNumber\n  }), __jsx(Buttons, {\n    nextQuestion: function nextQuestion(num, quiz) {\n      return _nextQuestion();\n    },\n    returnQuestion: function returnQuestion(num, quiz) {\n      return _returnQuestion();\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"1985524870\"\n  }, [\"body{margin:0;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen', 'Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue', sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;background-image:url(/images/background.jpg);background-size:cover;-webkit-text-decoration:none;text-decoration:none;}\", \"code{font-family:source-code-pro,Menlo,Monaco,Consolas,'Courier New', monospace;}\", \".question{margin-top:20px;padding:20px;width:800px;background-color:white;}\", \"a{font-weight:bold;}\", \".choice{padding:10px;border-radius:10px;margin-top:20px;display:block;width:100%;text-align:left;}\", \".question-correct-choice{background-color:#52c41a;color:white;border:#52c41a 4px solid;}\", \".question-wrong-choice{background-color:red;color:white;border:red 4px solid;}\", \".choice p{font-size:20px;font-weight:bold;margin:0;}\", \".answer-discription{border:#52c41a 4px solid;margin:15px 0 15px 0;padding:10px;font-weight:bold;}\", \".button-field{text-align:center;}\", \".quiz-button{margin:40px 80px;}\"]));\n};\n\nexport default Main;","map":null,"metadata":{},"sourceType":"module"}