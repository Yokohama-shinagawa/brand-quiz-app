{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport firebase from \"../src/firebase\";\nimport { db } from \"../src/firebase\";\nimport Quiz from \"../src/components/Quiz\";\nimport Header from \"../src/components/Header\";\nimport Buttons from \"../src/components/Buttons\"; // const Main = () => {\n//   const [state, setState] = useState({\n//     loginEmail: \"\",\n//     loginPassword: \"\",\n//     email: \"\",\n//     password: \"\",\n//     isUserEmpty: true,\n//     quiz: [],\n//     count: 0,\n//     answer: false,\n//     correct: false,\n//     answerNumber: 100,\n//   });\n//   useEffect(() => {\n//     firebase.auth().onAuthStateChanged(function (user) {\n//       if (user) {\n//         console.log(\"trueです！\");\n//         setState({\n//           ...state,\n//           isUserEmpty: false,\n//         });\n//       }\n//       console.log(\"useEffect実行中\");\n//     });\n//     let list = [];\n//     db.collection(\"quiz\")\n//       .get()\n//       .then((querySnapshot) => {\n//         querySnapshot.forEach((doc) => {\n//           const new_hash = {\n//             text: doc.data().text,\n//             choice1: doc.data().choice1,\n//             choice2: doc.data().choice2,\n//             choice3: doc.data().choice3,\n//             choice4: doc.data().choice4,\n//             answer: doc.data().answer,\n//           };\n//           list.push(new_hash);\n//         });\n//         setState({\n//           ...state,\n//           quiz: list,\n//         });\n//       });\n//     return () => {\n//       console.log('unmounting')\n//     }\n//   }, []);\n//   const logout = () => {\n//     firebase\n//       .auth()\n//       .signOut()\n//       .then(function () {})\n//       .catch(function (error) {});\n//   };\n//   const googleLogin = () => {\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     if (state.isUserEmpty) {\n//       console.log(\"googleでログインします\");\n//       firebase\n//         .auth()\n//         .signInWithPopup(provider)\n//         .then(function (result) {})\n//         .catch(function (error) {});\n//     } else {\n//       logout();\n//     }\n//   };\n//   const nextQuestion = () => {\n//     const count = state.count + 1;\n//     setState({\n//       ...state,\n//       count: count,\n//       answer: false,\n//     });\n//   };\n//   const returnQuestion = () => {\n//     const count = state.count - 1;\n//     setState({\n//       ...state,\n//       count: count,\n//     });\n//   };\n//   const showAnswer = (num, answer) => {\n//     if (num === answer) {\n//       setState({\n//         ...state,\n//         answerNumber: num,\n//         correct: true,\n//         answer: true,\n//       });\n//     } else {\n//       setState({\n//         ...state,\n//         answerNumber: num,\n//         correct: false,\n//         answer: true,\n//       });\n//     }\n//   };\n//   return (\n//     <div>\n//       <Header\n//         isUserEmpty={state.isUserEmpty}\n//         googleLogin={() => googleLogin()}\n//       />\n//       <div className=\"question mx-auto\">\n//         <Quiz\n//           quiz={state.quiz[state.count]}\n//           showAnswer={(num, quiz) => showAnswer(num, quiz)}\n//           answer={state.answer}\n//           correct={state.correct}\n//           answerNumber={state.answerNumber}\n//         />\n//         <Buttons\n//           nextQuestion={(num, quiz) => nextQuestion()}\n//           returnQuestion={(num, quiz) => returnQuestion()}\n//         />\n//       </div>\n\n{\n  /* <style jsx global>{`\n   body {\n       margin: 0;\n       font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n       'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n       sans-serif;\n       -webkit-font-smoothing: antialiased;\n       -moz-osx-font-smoothing: grayscale;\n       background-image: url(/images/background.jpg);\n       background-size: cover;\n       text-decoration: none;\n   }\n   code {\n       font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n       monospace;\n   }\n   \n   .header{\n       background-color:white;\n       line-height: 60px;\n       width:100vw;\n   }\n   \n   .header-button{\n       display: inline-block;\n   }\n   \n   .header a{\n       color:black;\n   }\n   \n   .question{\n       margin-top:20px;\n       padding:20px;\n       width:800px;\n       background-color:white;\n   }\n   \n   a{\n       font-weight:bold;\n   }\n   \n   .choice{\n       padding:10px;\n       border-radius:10px;\n       margin-top:20px;\n       display: block;\n       width:100%;\n       text-align: left;\n   }\n   \n   .question-choice{\n       background-color:white;\n       color:black;\n       border: #52c41a 4px solid;\n   }\n   \n   .question-correct-choice{\n       background-color:#52c41a;\n       color:white;\n       border: #52c41a 4px solid;\n   }\n   \n   .question-wrong-choice{\n       background-color:red;\n       color:white;\n       border:red 4px solid;\n   }\n   .choice p{\n       font-size:20px;\n       font-weight:bold;\n       margin:0;\n   }\n   .answer-discription{\n       border: #52c41a 4px solid;\n       margin: 15px 0 15px 0;\n       padding:10px;\n       font-weight: bold;\n   }\n   .button-field{\n       text-align:center;\n   }\n   \n   .quiz-button{\n       margin:40px 80px;\n   }  \n  `}</style> */\n} //     </div>\n//   );\n// };\n// export default Main;","map":{"version":3,"sources":["/Users/kenta/Documents/react/brand-quiz-app/pages/main.js"],"names":["React","useEffect","useState","firebase","db","Quiz","Header","Buttons"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApsFa,C,CACpB;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport firebase from \"../src/firebase\";\nimport { db } from \"../src/firebase\";\nimport Quiz from \"../src/components/Quiz\";\nimport Header from \"../src/components/Header\";\nimport Buttons from \"../src/components/Buttons\";\n\n// const Main = () => {\n//   const [state, setState] = useState({\n//     loginEmail: \"\",\n//     loginPassword: \"\",\n//     email: \"\",\n//     password: \"\",\n//     isUserEmpty: true,\n//     quiz: [],\n//     count: 0,\n//     answer: false,\n//     correct: false,\n//     answerNumber: 100,\n//   });\n\n//   useEffect(() => {\n//     firebase.auth().onAuthStateChanged(function (user) {\n//       if (user) {\n//         console.log(\"trueです！\");\n//         setState({\n//           ...state,\n//           isUserEmpty: false,\n//         });\n//       }\n//       console.log(\"useEffect実行中\");\n//     });\n\n//     let list = [];\n//     db.collection(\"quiz\")\n//       .get()\n//       .then((querySnapshot) => {\n//         querySnapshot.forEach((doc) => {\n//           const new_hash = {\n//             text: doc.data().text,\n//             choice1: doc.data().choice1,\n//             choice2: doc.data().choice2,\n//             choice3: doc.data().choice3,\n//             choice4: doc.data().choice4,\n//             answer: doc.data().answer,\n//           };\n//           list.push(new_hash);\n//         });\n//         setState({\n//           ...state,\n//           quiz: list,\n//         });\n//       });\n    \n//     return () => {\n//       console.log('unmounting')\n//     }\n//   }, []);\n\n//   const logout = () => {\n//     firebase\n//       .auth()\n//       .signOut()\n//       .then(function () {})\n//       .catch(function (error) {});\n//   };\n\n//   const googleLogin = () => {\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     if (state.isUserEmpty) {\n//       console.log(\"googleでログインします\");\n//       firebase\n//         .auth()\n//         .signInWithPopup(provider)\n//         .then(function (result) {})\n//         .catch(function (error) {});\n//     } else {\n//       logout();\n//     }\n//   };\n\n//   const nextQuestion = () => {\n//     const count = state.count + 1;\n//     setState({\n//       ...state,\n//       count: count,\n//       answer: false,\n//     });\n//   };\n\n//   const returnQuestion = () => {\n//     const count = state.count - 1;\n//     setState({\n//       ...state,\n//       count: count,\n//     });\n//   };\n\n//   const showAnswer = (num, answer) => {\n//     if (num === answer) {\n//       setState({\n//         ...state,\n//         answerNumber: num,\n//         correct: true,\n//         answer: true,\n//       });\n//     } else {\n//       setState({\n//         ...state,\n//         answerNumber: num,\n//         correct: false,\n//         answer: true,\n//       });\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Header\n//         isUserEmpty={state.isUserEmpty}\n//         googleLogin={() => googleLogin()}\n//       />\n//       <div className=\"question mx-auto\">\n//         <Quiz\n//           quiz={state.quiz[state.count]}\n//           showAnswer={(num, quiz) => showAnswer(num, quiz)}\n//           answer={state.answer}\n//           correct={state.correct}\n//           answerNumber={state.answerNumber}\n//         />\n\n//         <Buttons\n//           nextQuestion={(num, quiz) => nextQuestion()}\n//           returnQuestion={(num, quiz) => returnQuestion()}\n//         />\n//       </div>\n      {/* <style jsx global>{`\n        body {\n            margin: 0;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            background-image: url(/images/background.jpg);\n            background-size: cover;\n            text-decoration: none;\n        }\n        code {\n            font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n            monospace;\n        }\n        \n        .header{\n            background-color:white;\n            line-height: 60px;\n            width:100vw;\n        }\n        \n        .header-button{\n            display: inline-block;\n        }\n        \n        .header a{\n            color:black;\n        }\n        \n        .question{\n            margin-top:20px;\n            padding:20px;\n            width:800px;\n            background-color:white;\n        }\n        \n        a{\n            font-weight:bold;\n        }\n        \n        .choice{\n            padding:10px;\n            border-radius:10px;\n            margin-top:20px;\n            display: block;\n            width:100%;\n            text-align: left;\n        }\n        \n        .question-choice{\n            background-color:white;\n            color:black;\n            border: #52c41a 4px solid;\n        }\n        \n        .question-correct-choice{\n            background-color:#52c41a;\n            color:white;\n            border: #52c41a 4px solid;\n        }\n        \n        .question-wrong-choice{\n            background-color:red;\n            color:white;\n            border:red 4px solid;\n        }\n        .choice p{\n            font-size:20px;\n            font-weight:bold;\n            margin:0;\n        }\n        .answer-discription{\n            border: #52c41a 4px solid;\n            margin: 15px 0 15px 0;\n            padding:10px;\n            font-weight: bold;\n        }\n        .button-field{\n            text-align:center;\n        }\n        \n        .quiz-button{\n            margin:40px 80px;\n        }  \n      `}</style> */}\n//     </div>\n//   );\n// };\n\n// export default Main;\n"]},"metadata":{},"sourceType":"module"}